#!/bin/bash
RED='\033[0;31m'
NC='\033[0m'
ORNG='\033[0;33m'
W='\033[1;37m'
ARG=$2                                        # IP addition argument
usage() {                                      # Function: Print a help message.
	echo "Sifter Help Menu"
	echo "*****************"
	echo "+"
	echo "+"
	echo "# sifter		  runs the programs bringing up the menu in a cli environment"
	echo "# sifter    -c      will check the exsiting hosts in the hostlist"
	echo "# sifter    -a '*'  must be added with '' and then automattically appends the hostname/IP to host file"
	echo "# sifter    -e      will open the host file for manual editing"
	echo "# sifter    -m      Opens the Modules Menu"
	echo "# sifter    -b      Runs the Blackwidow Module using the existing host file"
	echo "# sifter    -n      Runs the Nikto Module using the existing host file"
	echo "# sifter    -d      Runs the Dirbuster Module using the existing host file"
	echo "# sifter    -w      Runs the WPScan Module using the existing host file"
	echo "# sifter	  -r	  Runs the RapidScan module against a given target"
	echo "# sifter    -p      Runs the Nmap Module using the existing host file"
	echo "# sifter	  -f	  Runs the Flan Vuln-Scanner module against target or host list"
	echo "# sifter    -t      Runs theHarvester against target or host file"
	echo "# sifter    -y      Runs the Yuki-Chan Module using the existing host file"
	echo "# sifter	  -s	  Runs the Sublist3r module against targets"
	echo "# sifter	  -z	  Runs the AttackSurfaceMapper module against a given target"
	echo "# sifter	  -o 	  Runs the Photon module against target or host list"
	echo "# sifter	  -u	  Checks for any updates on Github"
	echo "# sifter    -h      This Help Menu" 1>&2
}
update() {
	figlet -f mini "Checking for updates"
	cd /opt
	sudo rm -rf sifter
	sudo git clone https://github.com/s1l3n7h0s7/sifter.git
	cd sifter && sudo chmod +x install.sh
	sudo ./install.sh
	echo -e "${W}Done!${NC}"
}

cd /opt/sifter

while getopts "a:cembnzdwptorsyfhu" options; do            	# Loop: Get the next option;
							# use silent error checking;
							# option a takes 1 arguments.
	case "${options}" in

		c)
			echo -e "${ORNG}"
			figlet -f mini "Checking for live targets..."
			echo -e "${NC}"
			./modules/check.sh
			;;

		e)
			echo -e "${ORNG}"
			figlet -f mini "Editing Host List"
			echo -e "${NC}"
			sleep 2
			nano files/host_list.txt
			sleep 2
			./modules/menu.sh
			;;

		a)
			echo -e "${ORNG}"
			figlet -f mini "Adding $ARG to host list"
			echo -e "${NC}"
			echo "$ARG" >> files/host_list.txt
			sleep 2
			./modules/menu.sh
			;;

		m)
			echo -e "${ORNG}"
			figlet -f mini "Module Menu"
			echo -e "${NC}"
			./modules/module.sh
			;;

		b)
			echo -e "${ORNG}"
			figlet -f mini "Running BlackWidow"
			echo -e "${NC}"
			./modules/widow.sh
			;;

		n)
			echo -e "${ORNG}"
			figlet -f mini "Running Nikto"
			echo -e "${NC}"
			./modules/nikto.sh
			;;

		p)
			echo -e "${ORNG}"
			figlet -f mini "Running Nmap"
			echo -e "${NC}"
			./modules/nmap.sh
			;;

		d)
			echo -e "${ORNG}"
			figlet -f mini "Running Dirbuster"
			echo -e "${NC}"
			./modules/dirb.sh
			;;

		o)
			echo -e "${ORNG}"
			figlet -f mini "Running Photon"
			echo -e "${NC}"
			./modules/photon.sh
			;;

		s)
			echo -e "${ORNG}"
			figlet -f mini "Running Sublist3r"
			echo -e "${NC}"
			;;			
		
		z)
			echo -e "${ORNG}"
			figlet -f mini "Running AttackSurfaceMapper"
			echo -e "${NC}"
			./modules/asm.sh
			;;

		w)
			echo -e "${ORNG}"
			figlet -f mini "Running WPScan"
			echo -e "${NC}"
			./modules/wpscan.sh
			;;

		t)
		  	echo -e "${ORNG}"
		  	figlet -f mini "Running theHarvester"
		  	echo -e "${NC}"
		  	./modules/harvester.sh
      		;;

 		y)
      		echo -e "${ORNG}"
      		figlet -f mini "Running Yuki-Chan"
      		echo -e "${NC}"
      		./modules/yuki.sh
      		;;

		r)
			echo -e "${ORNG}"
			figlet -f mini "RapidscaN"
			echo -e "${NC}"
			./modules/rapidscan.sh
			;;

		f)
			echo -e "${ORNG}"
			figlet -f mini "Flan"
			echo -e "${NC}"
			./modules/flan.sh
			;;

    	u)
      		echo -e "${ORNG}"
      		figlet -f mini "Checking for updates"
      		update
      		echo -e "${W}Done!${NC}"
      		;;

		h)
			echo -e "${RED}"
			figlet "SifteR"
			echo -e "${NC}"
			usage
			;;

	esac
done
if (( $OPTIND == 1 )); then				# if no option is passed
	./modules/menu.sh		  	# default command is run
fi
exit 0
