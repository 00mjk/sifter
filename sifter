#!/bin/bash
RED='\033[0;31m'
NC='\033[0m'
ORNG='\033[0;33m'
W='\033[1;37m'
ARG=$2                                         # IP addition argument
# Help Menu
usage() {                                      # Function: Print a help message.
	echo "Sifter Help Menu"
	echo "*****************"
	echo "+"
	echo "+"
	echo "# sifter	runs the programs bringing up the menu in a cli environment"
	echo "# sifter	-c will check the exsiting hosts in the hostlist"
	echo "# sifter	-a '*' must be added with '' and then automattically appends the hostname/IP to host file"
	echo "# sifter	-e Opens the Exploitation Module"
	echo "# sifter	-i Opens the Info-based Module menu"
	echo "# sifter 	-d Opens the Domain Focused Modules"
	echo "# sifter 	-n Opens the Network Mapping Modules menu"
	echo "# sifter	-w Opens the Website Focused Modules"
	echo "# sifter	-wa Opens the Web-App Focused Module menu"
	echo "# sifter	-v Opens the Vulnerability Scanning Module Menu"
	echo "# sifter	-u Checks for any updates on Github"
	echo "# sifter	-h This Help Menu" 1>&2
}
# Information Modules
cred_mods(){
  echo -e "${RED}"
  figlet -f mini "Info-Focused Modules"
  echo -e "${ORNG}"
  PS3='What tool would you like to use?'
          options=("theHarvester" "SniffingBear" "Osmedeus" "ReconSpider" "Back" "Quit") # "Sunny-Honey \n ssh HoneyPot"
          select opt in "${options[@]}"
          do
                  case $opt in
                            "theHarvester")
                                ./modules/credmods/harvester.sh
                                ;;

                            "SniffingBear")
                                ./modules/credmods/s_bear.sh
                                ;;

                            "Osmedeus")
                                ./modules/credmods/osmedeus.sh
                                ;;

                            "ReconSpider")
                                ./modules/credmods/rspider.sh
                                ;;

                            "Back")
                                modules
                                ;;

                            "Quit")
                                exit
                                ;;
                    esac
            done
            echo -e "${NC}"
}
# Domain Modules
dom_mods(){
  echo -e "${RED}"
  figlet -f mini "Domain-Focused Modules"
  echo -e "${ORNG}"
  PS3='What tool would you like to use?'
          options=("DnsTwist" "DomainFuzz" "Sublist3r" "Armory" "Back" "Quit")
          select opt in "${options[@]}"
          do
                  case $opt in
                            "DnsTwist")
                                ./modules/dommods/dnstwist.sh
                                ;;

                            "DomainFuzz")
                                ./modules/dommods/domainfuzz.sh
                                ;;

                            "Sublist3r")
                                ./modules/dommods/sublist3r.sh
                                ;;

                            "Armory")
                                ./modules/dommods/armory.sh
                                ;;

                            "Back")
                                modules
                                ;;

                            "Quit")
                                exit
                                ;;
                    esac
            done
            echo -e "${NC}"
}
# Network Modules
net_mods(){
  echo -e "${RED}"
  figlet -f mini "Network-Focused Modules"
  echo -e "${ORNG}"
  PS3='What tool would you like to use?'
          options=("Scan for Live-Hosts" "nMap" "AttackSurfaceMapper" "Back"  "Quit")
          select opt in "${options[@]}"
          do
                  case $opt in
                            "Scan for Live-Hosts")
                                ./modules/netmods/check.sh
                                ;;

                            "nMap")
                                ./modules/netmods/nmap.sh
                                ;;

                            "AttackSurfaceMapper")
                                ./modules/netmods/asm.sh
                                ;;

                            "Back")
                                modules
                                ;;

                            "Quit")
                                exit
                                ;;
                    esac
            done
            echo -e "${NC}"
}
# Vulnerability Scanners
vuln_mods(){
  echo -e "${RED}"
  figlet -f mini "Vulnerability-Focused Modules"
  echo -e "${ORNG}"
  PS3='What tool would you like to use?'
          options=("Flan" "RapidScan" "Yuki-Chan" "Back" "Quit")
          select opt in "${options[@]}"
          do
                  case $opt in
                            "Flan")
                                ./modules/vulnscanners/flan.sh
                                ;;

                            "RapidScan")
                                ./modules/vulnscanners/rapidscan.sh
                                ;;

                            "Yuki-Chan")
                                ./modules/vulnscanners/yuki.sh
                                ;;

                            "Back")
                                modules
                                ;;

                            "Quit")
                                exit
                                ;;
                    esac
            done
            echo -e "${NC}"
}
# Web-Focused Modules
web_mods(){
  echo -e "${RED}"
  figlet -f mini "Web-Focused Modules"
  echo -e "${ORNG}"
  PS3='What tool would you like to use?'
          options=("Konan" "Nikto" "BlackWidow" "WPScan" "Back" "Quit")
          select opt in "${options[@]}"
          do
                  case $opt in
                            "Konan")
                                ./modules/webmods/konan.sh
                                ;;

                            "Nikto")
                                ./modules/webmods/nikto.sh
                                ;;

                            "BlackWidow")
                                ./modules/webmods/widow.sh
                                ;;

                            "WPScan")
                                ./modules/webmods/wpscan.sh
                                ;;

                            "Back")
                                modules
                                ;;

                            "Quit")
                                exit
                                ;;
                    esac
            done
            echo -e "${NC}"
}
# Exploitation Modules
ex_mods(){
  echo -e "${RED}"
  figlet -f mini "Exploitation Modules"
  echo -e "${NC}"
  PS3='What tool would you like to use?'
        options=("ActiveReign" "TigerShark" "iSpy" "ShodanSploit" "Back" "Quit")
        select opt in "${options[@]}"
        do
                case $opt in
			               "ActiveReign")
			                    echo -e "${YLW}ActiveReign is a Network-Attack toolkit${NC}"
                                echo -e "${W}Would you like to continue?(y/n)${NC}"
                                read M_ANS
                                if [[ ${M_ANS} == 'y' ]]; then
                                    ./modules/exmods/ar3.sh
                                else
                                    exmods
                                fi
			                    ;;

                           "TigerShark")
                                echo -e "${YLW}TigerShark is a multi-tooled phishing framework${NC}"
                                echo -e "${W}Would you like to continue?(y/n)${NC}"
                                read M_ANS
                                if [[ ${M_ANS} == 'y' ]]; then
                                    ./modules/exmods/tiger.sh
                                else
                                    exmods
                                fi
                                ;;

			               "iSpy")
                                echo -e "${YLW}iSpy is a Microsft 'blue' vuln exploitation framework${NC}"
                                echo -e "${W}Would you like to continue?(y/n)${NC}"
                                read M_ANS
                                if [[ ${M_ANS} == 'y' ]]; then
                                    ./modules/exmods/ispy.sh
                                else
                                    exmods
			                    fi
			                    ;;

                           "ShodanSploit")
                                echo -e "${YLW}ShodanSploit allows for shodan searches to be done in the terminal${NC}"
                                echo -e "${W}Would you like to continue?(y/n)${NC}"
                                read M_ANS
                                if [[ ${M_ANS} == 'y' ]]; then
                                    ./modules/exmods/ssploit.sh
                                else
                                    exmods
			                    fi
                                ;;

                            "NekoBot")
                                echo -e "${YLW}NekoBot is a Web-Shell exploitation framework${NC}"
                                echo -e "${W}Would you like to continue?(y/n)${NC}"
                                read M_ANS
                                if [[ ${M_ANS} == 'y' ]]; then
                                    ./modules/exmods/nekobot.sh
                                else
                                    exmods
			                    fi
                                ;;

			               "Back")
                                modules
                                ;;

                           "Quit")
                                exit 0
                                ;;
                esac
        done
}
# Web-App Modules
webapps(){
  echo -e "${RED}"
  figlet -f mini "WebApp Modules"
  echo -e "${NC}"
  PS3='What tool would you like to use?'
        options=("Sitadel" "wafw00f" "Photon" "Back" "Quit")
        select opt in "${options[@]}"
        do
                case $opt in
                        "Sitadel")
                            ./modules/webapps/sitadel.sh
                            ;;

                        "wafw00f")
                            ./modules/webapps/wafw00f.sh
                            ;;

                        "Photon")
                            /modules/webapps/photon.sh
                            ;;

                        "Back")
                            modules
                            ;;

                        "Quit")
                            exit 0
                            ;;
                esac
        done
}
# Module Menu
modules(){
    echo -e "${RED}Modules${NC}"
    echo -e "${RED}*******${NC}"
    echo -e "${ORNG}"
    PS3='What would you like to do?'
            options=("Info-Focused Modules" "Domain-Focused Modules" "Network-Focused Modules" "Web-Focused Modules" "Vulnerability-Focused Modules" "Exploitation(Beta)" "WebApp-Focused Modules" "Quit")
            select opt in "${options[@]}"
            do
                    case $opt in
                            "Info-Focused Modules")
                                cred_mods
                                ;;

                            "Domain-Focused Modules")
                                dom_mods
                                ;;

                            "Network-Focused Modules")
                                net_mods
                                ;;

                            "Web-Focused Modules")
                                web_mods
                                ;;

                            "Vulnerability-Focused Modules")
                                vuln_mods
                                ;;

                            "Exploitation(Beta)")
                                ex_mods
                                ;;

			                "WebApp-Focused Modules")
			                    webapps
			                    ;;

                            "Quit")
                                exit 0
                                ;;
                    esac
            done
    echo -e "${NC}"
}
# Menu
menu(){
    echo -e "${RED}"
    figlet -f big "..SifteR.."
    echo -e "${PPL}"
    figlet -f small "s1l3nt78"
    echo -e "${ORNG}////////========RubY_(v2.2)========\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\${NC}"
    echo -e "${LP}==Hit Ctrl + c at any time to quit Sifter==${NC}"
    arg=$1
    PS3='What would you like to do?'
            options=("Check" "Edit List" "Parse Results to Modules" "Update" "Quit")
            select opt in "${options[@]}"
            do
                case $opt in
                    "Check")
                        ./modules/netmods/check.sh
                        ;;

                    "Edit List")
                        ./modules/netmods/editor.sh
                        ;;

                    "Parse Results to Modules")
                        modules
                        ;;

		            "Update")
		                update
                        ;;

                    "Quit")
                        exit
                        ;;
                esac
            done
}
# Update
update(){
    echo -e "${ORNG}"
    figlet -f mini "Checking for updates"
	git fetch
	git pull
	sudo ./install.sh
	sudo cp sifter -t /usr/sbin
	sudo chmod +x -R /opt/sifter/modules
	sudo chmod +x /usr/sbin/sifter
    sudo chown $USER:$USER -R /opt/sifter /usr/sbin/sifter
    echo -e "${W}Done!${NC}"
}

cd /opt/sifter
while getopts "a:wandwiecvuh" options; do            	# Loop: Get the next option;
	case "${options}" in                                # use silent error checking;
                                                        # option a takes 1 arguments.
		c)
			echo -e "${YLW}"
			figlet -f mini "Checking for live targets..."
			echo -e "${NC}"
			./modules/netmods/check.sh
            modules
			;;

		a)
			echo -e "${ORNG}"
			figlet -f mini "Adding $ARG to host list"
			echo -e "${NC}"
			echo "$ARG" >> files/host_list.txt
			sleep 2
			modules
			;;

		i)
			echo -e "${LP}"
			figlet -f mini "Info Gatherers"
			echo -e "${NC}"
			cred_mods
			;;

		d)
			echo -e "${LP}"
			figlet -f mini "Domain-Fuzzers"
			echo -e "${NC}"
			dom_mods
			;;

		e)
			echo -e "${LP}"
			figlet -f mini "Exploitative Modules"
			echo -e "${NC}"
			ex_mods
			;;

		n)
			echo -e "${LP}"
			figlet -f mini "Network Mappers"
			echo -e "${NC}"
			net_mods
			;;

		v)
			echo -e "${LP}"
			figlet -f mini "Vulnerability Scanners"
			echo -e "${NC}"
			vuln_mods
			;;

		wa)
			echo -e "${LP}"
			figlet -f mini "Web-App Testers"
			echo -e "${NC}"
			webapps
			;;

		w)
			echo -e "${LP}"
			figlet -f mini "Web Recon"
			echo -e "${NC}"
			web_mods
			;;

    	u)
      		update
      		;;

		h)
			echo -e "${RED}"
			figlet "SifteR"
			echo -e "${NC}"
			usage
			;;

	esac
done
if (( $OPTIND == 1 )); then				# if no option is passed
	menu		  	                    # default command is run
fi
exit 0
